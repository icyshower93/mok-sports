Hi Replit,

I'm hosting a full-stack app (Node.js + Express + React via Vite) on Replit. I'm using the ws library to run WebSockets in production. However, the WebSocket upgrade requests are not reaching my backend â€” no upgrade logs show up, and WebSocketServer shows 0 connections even when clients attempt to connect.

Please help me implement the following WebSocket-compatible deployment:

âœ… Backend: Use manual WebSocket upgrade handling
Make sure my backend server does not rely on path inside new WebSocket.Server(). Instead, it should use noServer: true and manually intercept upgrade requests like this:

ts
Copy
Edit
import express from 'express';
import http from 'http';
import WebSocket from 'ws';

const app = express();
const server = http.createServer(app);

const wss = new WebSocket.Server({ noServer: true });

server.on('upgrade', (req, socket, head) => {
  console.log('ðŸ”Œ UPGRADE REQUEST RECEIVED:', req.url);

  if (req.url?.startsWith('/draft-ws')) {
    wss.handleUpgrade(req, socket, head, ws => {
      wss.emit('connection', ws, req);
    });
  } else {
    socket.destroy();
  }
});

// Attach static + API routes here
// ...

server.listen(process.env.PORT || 5000, () => {
  console.log('âœ… Server listening');
});
This should replace app.listen(...) entirely.

âœ… Frontend: Dynamic WebSocket URL
In the React client, make sure it does not hardcode ws://localhost. Instead, use:

ts
Copy
Edit
const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';
const socket = new WebSocket(`${protocol}://${window.location.host}/draft-ws?userId=${userId}&draftId=${draftId}`);
âœ… Serve built frontend from Express, not Vite dev server
In production, do not rely on Vite's dev server or proxying. Instead:

ts
Copy
Edit
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
app.use(express.static(path.join(__dirname, '..', 'client', 'dist')));

app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, '..', 'client', 'dist', 'index.html'));
});
And run:

bash
Copy
Edit
cd client && npm run build
âœ… Fix .replit to run Node server only
Update .replit to ensure Replit runs only the Node.js backend in production, and not the Vite dev server:

toml
Copy
Edit
run = "npm run build --prefix client && node server/index.js"
If replit.nix or other config files are interfering, adjust them so Vite isnâ€™t active during production.

âœ… Ensure Replit routes WebSocket upgrade requests correctly
Please ensure that:

Incoming wss:// upgrade requests to /draft-ws are not blocked or intercepted by Replit's proxy

No other service (like Vite or another server) is intercepting or blocking the upgrade event

The Node server (with server.on('upgrade')) is receiving the connection

âœ… Optional Fallback (Only if required)
If Replit cannot support proper WebSocket upgrades on your infrastructure, please let me know so I can switch to a service like Render, Fly.io, or Railway, all of which support native WebSocket routing.